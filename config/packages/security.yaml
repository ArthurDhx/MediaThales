security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        users_in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: in_database

            form_login:
                login_path: security_login
                check_path: security_login
            logout:
                path: security_logout
            guard:
               authenticators:
                   - App\Security\LoginFormAuthenticator
            access_denied_handler: App\Security\AccessDeniedHandler



    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/inscription, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/adherent, roles: ROLE_ADHERENT }
        - { path: ^/benevole, roles: ROLE_BENEVOLE }
        - { path: ^/profil, roles: IS_AUTHENTICATED_FULLY }
    role_hierarchy:
        ROLE_ADMIN: [ ROLE_ADHERENT, ROLE_BENEVOLE, ROLE_ALLOWED_TO_SWITCH ]
        ROLE_BENEVOLE: [ ROLE_ADHERENT]
